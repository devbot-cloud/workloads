#------------------------------------------------
# This is the Helm Release for the application external secrets
# Flux will install external secrets onto the remote cluster
# using the kubeconfig stored in the secret (CLUSTERNAME)-kubeconfig
# This can be controlled by installing the release into the clusters namespace
#------------------------------------------------
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rancher
  namespace: ${CLUSTER_NAME:=flux-system}
  annotations:
    remote-flux/RemoteEnabled: "true" # <--- This is the annotation that enables downstream clusters to use this helm release
spec:
# -------------
# The Kubeconfig Used to by HelmRelease to install the helm chart
  # kubeConfig:
  #   secretRef:
  #     name: ${CLUSTER_NAME}-kubeconfig  # <--- The remote kubeconfig to use to apply the manifest
# -------------
  releaseName: rancher            # <- This will be the name of the helm release on the remote cluster
  targetNamespace: cattle-system  # <- This will be the namespace the helm release will be installed into on the remote cluster
  interval: 1m0s
  chart:
    spec:
      chart: rancher
      sourceRef:
        kind: HelmRepository
        name: rancher
        namespace: flux-system
      version: ${RANCHER_VERSION:=2.6.8}
  timeout: 1m0s
  install:
    createNamespace: true
  values:
    hostname: ${CLUSTER_FQDN}  # <- This is the FQDN of the cluster
    ingress:
      tls:
        source: secret
    # privateCA: true
    replicas: 3
    useBundledSystemChart: true
    bootstrapPassword: ${RANCHER_PASSWORD:=admin}
# -------------
# This allows us to use the values.yaml file in the helm chart 
# This configmap can be created in each clusters namespace 
# and will be used to configure the helm release per cluster
# -------------
  valuesFrom:
    - kind: ConfigMap
      name: rancher-values
      valuesKey: values.yaml
      optional: true